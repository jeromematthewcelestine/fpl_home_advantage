filter(season != '2020/21')
vars_for_all_players <- list('minutes',
'goals_scored',
'assists',
'bonus',
'red_cards',
'yellow_cards')
calc_stats <- function(df, var_, ...) {
tibble(mean = mean(df[var_] %>% pull()),
se = std.error(df[var_]))
}
all_stats <- tibble()
for (var in vars_for_all_players) {
temp <- df_for_source_analysis %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, var, ...) }) %>%
mutate(var = var) %>%
mutate(var = case_when(var == 'assists' ~ 'Assists',
var == 'goals_scored' ~ 'Goals scored',
var == 'bonus' ~ 'Bonus points',
var == 'minutes' ~ 'Minutes',
var == 'red_cards' ~ 'Red cards',
var == 'yellow_cards' ~ 'Yellow cards'))
all_stats <- all_stats %>% bind_rows(temp)
}
all_stats
def_gk <- df_for_source_analysis %>% filter(position == 'GK' | position == 'DEF')
def_gk_vars <- list('clean_sheets', 'goals_conceded')
def_gk_stats <- tibble()
for (var_ in def_gk_vars) {
temp <- def_gk %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, var_, ...) }) %>%
mutate('var' = var_)
def_gk_stats <- def_gk_stats %>% bind_rows(temp)
}
def_gk_stats <- def_gk_stats %>%
mutate(var = case_when(var == 'clean_sheets' ~ 'Clean sheets',
var == 'goals_conceded' ~ 'Goals conceded'))
gk_only <- df_for_source_analysis %>% filter(position == 'GK')
gk_only_stats <- gk_only %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, 'saves', ...)}) %>%
mutate('var' = 'Saves')
plotting_data <- all_stats %>%
bind_rows(def_gk_stats) %>%
bind_rows(gk_only_stats) %>%
mutate(var = fct_relevel(var, c('Goals scored', 'Assists', 'Minutes',
'Bonus points', 'Red cards', 'Yellow cards',
'Goals conceded', 'Clean sheets', 'Saves')))
ggplot(plotting_data, aes(x = home_away, color = home_away)) +
geom_point(aes(y = mean)) +
geom_linerange(aes(ymin = mean - 1.96 * se, ymax = mean + 1.96 * se)) +
facet_wrap(~var, scales = 'free') +
labs(title = 'Home advantage in FPL point-scoring actions',
subtitle = 'Fantasy Premier League, 2016/17 to 2022/23',
caption = 'Source: https://github.com/vaastav/Fantasy-Premier-League; Jerome Williams
Note: Plots show means and 95% confidence intervals.
Calculations exclude 2020/21 season and player-gameweeks with ownership rates lower than 0.5%.
Goals conceded and clean sheets calculated for defenders and goalkeepers only; saves calculated for goalkeepers only.',
x = '',
y = '',
color = '') +
theme_bw() + theme(legend.position = 'none')
df_for_source_analysis <- home_away_data %>%
filter(season != '2020/21')
vars_for_all_players <- list('minutes',
'goals_scored',
'assists',
'bonus',
'red_cards',
'yellow_cards')
calc_stats <- function(df, var_, ...) {
tibble(mean = mean(df[var_] %>% pull()),
se = std.error(df[var_]))
}
all_stats <- tibble()
for (var in vars_for_all_players) {
temp <- df_for_source_analysis %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, var, ...) }) %>%
mutate(var = var) %>%
mutate(var = case_when(var == 'assists' ~ 'Assists',
var == 'goals_scored' ~ 'Goals scored',
var == 'bonus' ~ 'Bonus points',
var == 'minutes' ~ 'Minutes',
var == 'red_cards' ~ 'Red cards',
var == 'yellow_cards' ~ 'Yellow cards'))
all_stats <- all_stats %>% bind_rows(temp)
}
all_stats
def_gk <- df_for_source_analysis %>% filter(position == 'GK' | position == 'DEF')
def_gk_vars <- list('clean_sheets', 'goals_conceded')
def_gk_stats <- tibble()
for (var_ in def_gk_vars) {
temp <- def_gk %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, var_, ...) }) %>%
mutate('var' = var_)
def_gk_stats <- def_gk_stats %>% bind_rows(temp)
}
def_gk_stats <- def_gk_stats %>%
mutate(var = case_when(var == 'clean_sheets' ~ 'Clean sheets',
var == 'goals_conceded' ~ 'Goals conceded'))
gk_only <- df_for_source_analysis %>% filter(position == 'GK')
gk_only_stats <- gk_only %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, 'saves', ...)}) %>%
mutate('var' = 'Saves')
plotting_data <- all_stats %>%
bind_rows(def_gk_stats) %>%
bind_rows(gk_only_stats) %>%
mutate(var = fct_relevel(var, c('Goals scored', 'Assists', 'Minutes',
'Bonus points', 'Red cards', 'Yellow cards',
'Goals conceded', 'Clean sheets', 'Saves')))
ggplot(plotting_data, aes(x = home_away, color = home_away)) +
geom_point(aes(y = mean)) +
geom_linerange(aes(ymin = mean - 1.96 * se, ymax = mean + 1.96 * se)) +
facet_wrap(~var, scales = 'free') +
labs(title = 'Home advantage in FPL point-scoring actions',
subtitle = 'Fantasy Premier League, 2016/17 to 2022/23',
caption = 'Source: https://github.com/vaastav/Fantasy-Premier-League; Jerome Williams
Note: Plots show means and 95% confidence intervals.
Calculations exclude 2020/21 season and player-gameweeks with ownership rates lower than 0.5%.
\'Goals conceded\' and \'Clean sheets\' calculated for defenders and goalkeepers only. \'Saves\' calculated for goalkeepers only.',
x = '',
y = '',
color = '') +
theme_bw() + theme(legend.position = 'none')
df_for_source_analysis <- home_away_data %>%
filter(season != '2020/21')
vars_for_all_players <- list('minutes',
'goals_scored',
'assists',
'bonus',
'red_cards',
'yellow_cards')
calc_stats <- function(df, var_, ...) {
tibble(mean = mean(df[var_] %>% pull()),
se = std.error(df[var_]))
}
all_stats <- tibble()
for (var in vars_for_all_players) {
temp <- df_for_source_analysis %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, var, ...) }) %>%
mutate(var = var) %>%
mutate(var = case_when(var == 'assists' ~ 'Assists',
var == 'goals_scored' ~ 'Goals scored',
var == 'bonus' ~ 'Bonus points',
var == 'minutes' ~ 'Minutes',
var == 'red_cards' ~ 'Red cards',
var == 'yellow_cards' ~ 'Yellow cards'))
all_stats <- all_stats %>% bind_rows(temp)
}
all_stats
def_gk <- df_for_source_analysis %>% filter(position == 'GK' | position == 'DEF')
def_gk_vars <- list('clean_sheets', 'goals_conceded')
def_gk_stats <- tibble()
for (var_ in def_gk_vars) {
temp <- def_gk %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, var_, ...) }) %>%
mutate('var' = var_)
def_gk_stats <- def_gk_stats %>% bind_rows(temp)
}
def_gk_stats <- def_gk_stats %>%
mutate(var = case_when(var == 'clean_sheets' ~ 'Clean sheets',
var == 'goals_conceded' ~ 'Goals conceded'))
gk_only <- df_for_source_analysis %>% filter(position == 'GK')
gk_only_stats <- gk_only %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, 'saves', ...)}) %>%
mutate('var' = 'Saves')
plotting_data <- all_stats %>%
bind_rows(def_gk_stats) %>%
bind_rows(gk_only_stats) %>%
mutate(var = fct_relevel(var, c('Goals scored', 'Assists', 'Minutes',
'Bonus points', 'Red cards', 'Yellow cards',
'Goals conceded', 'Clean sheets', 'Saves')))
ggplot(plotting_data, aes(x = home_away, color = home_away)) +
geom_point(aes(y = mean)) +
geom_linerange(aes(ymin = mean - 1.96 * se, ymax = mean + 1.96 * se)) +
facet_wrap(~var, scales = 'free') +
labs(title = 'Home advantage in FPL point-scoring actions',
subtitle = 'Fantasy Premier League, 2016/17 to 2022/23',
caption = 'Source: https://github.com/vaastav/Fantasy-Premier-League; Jerome Williams
Note: Plots show means and 95% confidence intervals.
Calculations xclude 2020/21 season and player-gameweeks with selected by rates lower than 0.5%.
\'Goals conceded\' and \'Clean sheets\' calculated for defenders and goalkeepers only. \'Saves\' calculated for goalkeepers only.',
x = '',
y = '',
color = '') +
theme_bw() + theme(legend.position = 'none')
df_for_source_analysis <- home_away_data %>%
filter(season != '2020/21')
vars_for_all_players <- list('minutes',
'goals_scored',
'assists',
'bonus',
'red_cards',
'yellow_cards')
calc_stats <- function(df, var_, ...) {
tibble(mean = mean(df[var_] %>% pull()),
se = std.error(df[var_]))
}
all_stats <- tibble()
for (var in vars_for_all_players) {
temp <- df_for_source_analysis %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, var, ...) }) %>%
mutate(var = var) %>%
mutate(var = case_when(var == 'assists' ~ 'Assists',
var == 'goals_scored' ~ 'Goals scored',
var == 'bonus' ~ 'Bonus points',
var == 'minutes' ~ 'Minutes',
var == 'red_cards' ~ 'Red cards',
var == 'yellow_cards' ~ 'Yellow cards'))
all_stats <- all_stats %>% bind_rows(temp)
}
all_stats
def_gk <- df_for_source_analysis %>% filter(position == 'GK' | position == 'DEF')
def_gk_vars <- list('clean_sheets', 'goals_conceded')
def_gk_stats <- tibble()
for (var_ in def_gk_vars) {
temp <- def_gk %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, var_, ...) }) %>%
mutate('var' = var_)
def_gk_stats <- def_gk_stats %>% bind_rows(temp)
}
def_gk_stats <- def_gk_stats %>%
mutate(var = case_when(var == 'clean_sheets' ~ 'Clean sheets',
var == 'goals_conceded' ~ 'Goals conceded'))
gk_only <- df_for_source_analysis %>% filter(position == 'GK')
gk_only_stats <- gk_only %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, 'saves', ...)}) %>%
mutate('var' = 'Saves')
plotting_data <- all_stats %>%
bind_rows(def_gk_stats) %>%
bind_rows(gk_only_stats) %>%
mutate(var = fct_relevel(var, c('Goals scored', 'Assists', 'Minutes',
'Bonus points', 'Red cards', 'Yellow cards',
'Goals conceded', 'Clean sheets', 'Saves')))
ggplot(plotting_data, aes(x = home_away, color = home_away)) +
geom_point(aes(y = mean)) +
geom_linerange(aes(ymin = mean - 1.96 * se, ymax = mean + 1.96 * se)) +
facet_wrap(~var, scales = 'free') +
labs(title = 'Home advantage in FPL point-scoring actions',
subtitle = 'Fantasy Premier League, 2016/17 to 2022/23',
caption = 'Source: https://github.com/vaastav/Fantasy-Premier-League; Jerome Williams
Note: Plots show means and 95% confidence intervals.
Calculations xclude 2020/21 season and player-gameweeks with selected-by rates lower than 0.5%.
\'Goals conceded\' and \'Clean sheets\' calculated for defenders and goalkeepers only. \'Saves\' calculated for goalkeepers only.',
x = '',
y = '',
color = '') +
theme_bw() + theme(legend.position = 'none')
df_for_source_analysis <- home_away_data %>%
filter(season != '2020/21')
vars_for_all_players <- list('minutes',
'goals_scored',
'assists',
'bonus',
'red_cards',
'yellow_cards')
calc_stats <- function(df, var_, ...) {
tibble(mean = mean(df[var_] %>% pull()),
se = std.error(df[var_]))
}
all_stats <- tibble()
for (var in vars_for_all_players) {
temp <- df_for_source_analysis %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, var, ...) }) %>%
mutate(var = var) %>%
mutate(var = case_when(var == 'assists' ~ 'Assists',
var == 'goals_scored' ~ 'Goals scored',
var == 'bonus' ~ 'Bonus points',
var == 'minutes' ~ 'Minutes played',
var == 'red_cards' ~ 'Red cards',
var == 'yellow_cards' ~ 'Yellow cards'))
all_stats <- all_stats %>% bind_rows(temp)
}
all_stats
def_gk <- df_for_source_analysis %>% filter(position == 'GK' | position == 'DEF')
def_gk_vars <- list('clean_sheets', 'goals_conceded')
def_gk_stats <- tibble()
for (var_ in def_gk_vars) {
temp <- def_gk %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, var_, ...) }) %>%
mutate('var' = var_)
def_gk_stats <- def_gk_stats %>% bind_rows(temp)
}
def_gk_stats <- def_gk_stats %>%
mutate(var = case_when(var == 'clean_sheets' ~ 'Clean sheets',
var == 'goals_conceded' ~ 'Goals conceded'))
gk_only <- df_for_source_analysis %>% filter(position == 'GK')
gk_only_stats <- gk_only %>%
group_by(home_away) %>%
group_modify(function(df, ...) { calc_stats(df, 'saves', ...)}) %>%
mutate('var' = 'Saves')
plotting_data <- all_stats %>%
bind_rows(def_gk_stats) %>%
bind_rows(gk_only_stats) %>%
mutate(var = fct_relevel(var, c('Goals scored', 'Assists', 'Minutes played',
'Bonus points', 'Red cards', 'Yellow cards',
'Goals conceded', 'Clean sheets', 'Saves')))
ggplot(plotting_data, aes(x = home_away, color = home_away)) +
geom_point(aes(y = mean)) +
geom_linerange(aes(ymin = mean - 1.96 * se, ymax = mean + 1.96 * se)) +
facet_wrap(~var, scales = 'free') +
labs(title = 'Home advantage in FPL point-scoring actions',
subtitle = 'Fantasy Premier League, 2016/17 to 2022/23',
caption = 'Source: https://github.com/vaastav/Fantasy-Premier-League; Jerome Williams
Note: Plots show means and 95% confidence intervals.
Calculations xclude 2020/21 season and player-gameweeks with selected-by rates lower than 0.5%.
\'Goals conceded\' and \'Clean sheets\' calculated for defenders and goalkeepers only. \'Saves\' calculated for goalkeepers only.',
x = '',
y = '',
color = '') +
theme_bw() + theme(legend.position = 'none')
df_for_position_analysis <- home_away_data %>%
filter(season != '2020/21')
var = 'total_points'
calculate_stats <- function(df) {
mean_ <- mean(df[var] %>% pull())
se_ <- std.error(df[var])
tibble(
position = df$position[1],
home_away = df$home_away[1],
mean = mean_,
se = se_)
}
# gw %>%
#   split(list(.$season, .$was_home)) %>%
#   map(calculate_stats) %>%
#   list_rbind()
pos_stats <- gw %>%
split(list(.$position, .$was_home)) %>%
map(calculate_stats) %>%
list_rbind() %>%
mutate(
position = as_factor(position) %>% fct_relevel(c('GK', 'DEF', 'MID', 'FWD'))
)
df_for_position_analysis <- home_away_data %>%
filter(season != '2020/21')
var = 'total_points'
calculate_stats <- function(df) {
mean_ <- mean(df[var] %>% pull())
se_ <- std.error(df[var])
tibble(
position = df$position[1],
home_away = df$home_away[1],
mean = mean_,
se = se_)
}
# gw %>%
#   split(list(.$season, .$was_home)) %>%
#   map(calculate_stats) %>%
#   list_rbind()
pos_stats <- gw %>%
split(list(.$position, .$home_away)) %>%
map(calculate_stats) %>%
list_rbind() %>%
mutate(
position = as_factor(position) %>% fct_relevel(c('GK', 'DEF', 'MID', 'FWD'))
)
df_for_position_analysis
df_for_position_analysis$home_away
df_for_position_analysis <- home_away_data %>%
filter(season != '2020/21')
var = 'total_points'
calculate_stats <- function(df) {
mean_ <- mean(df[var] %>% pull())
se_ <- std.error(df[var])
tibble(
position = df$position[1],
home_away = df$home_away[1],
mean = mean_,
se = se_)
}
# gw %>%
#   split(list(.$season, .$was_home)) %>%
#   map(calculate_stats) %>%
#   list_rbind()
pos_stats <- df_for_position_analysis %>%
split(list(.$position, .$home_away)) %>%
map(calculate_stats) %>%
list_rbind() %>%
mutate(
position = as_factor(position) %>% fct_relevel(c('GK', 'DEF', 'MID', 'FWD'))
)
df_for_position_analysis <- home_away_data %>%
filter(season != '2020/21')
var = 'total_points'
calculate_stats <- function(df) {
mean_ <- mean(df[var] %>% pull())
se_ <- std.error(df[var])
tibble(
position = df$position[1],
home_away = df$home_away[1],
mean = mean_,
se = se_)
}
# gw %>%
#   split(list(.$season, .$was_home)) %>%
#   map(calculate_stats) %>%
#   list_rbind()
pos_stats <- df_for_position_analysis %>%
split(list(.$position, .$home_away)) %>%
map(calculate_stats) %>%
list_rbind() %>%
mutate(
position = as_factor(position) %>% fct_relevel(c('GK', 'DEF', 'MID', 'FWD'))
)
ggplot(pos_stats, aes(x = position, color = home_away, group = home_away)) +
geom_point(aes(y = mean)) +
geom_linerange(aes(ymin = mean - 2 * se, ymax = mean + 2 * se)) +
theme_jw() +
labs(title = 'Home advantage in FPL points, by player position',
subtitle = 'Fantasy Premier League, 2016/17 to 2022/23',
x = '',
y = 'Points per player per gameweek',
color = '',
caption = 'Source: https://github.com/vaastav/Fantasy-Premier-League; Jerome Williams
Plot shows means and 95% confidence intervals.
Calculations exclude 2020/21 season and player-gameweeks with selected-by rates lower than 0.5%.')
df_for_position_analysis <- home_away_data %>%
filter(season != '2020/21')
var = 'total_points'
calculate_stats <- function(df) {
mean_ <- mean(df[var] %>% pull())
se_ <- std.error(df[var])
tibble(
position = df$position[1],
home_away = df$home_away[1],
mean = mean_,
se = se_)
}
# gw %>%
#   split(list(.$season, .$was_home)) %>%
#   map(calculate_stats) %>%
#   list_rbind()
pos_stats <- df_for_position_analysis %>%
split(list(.$position, .$home_away)) %>%
map(calculate_stats) %>%
list_rbind() %>%
mutate(
position = as_factor(position) %>% fct_relevel(c('GK', 'DEF', 'MID', 'FWD'))
)
ggplot(pos_stats, aes(x = position, color = home_away, group = home_away)) +
geom_point(aes(y = mean)) +
geom_linerange(aes(ymin = mean - 2 * se, ymax = mean + 2 * se)) +
theme_bw() +
labs(title = 'Home advantage in FPL points, by player position',
subtitle = 'Fantasy Premier League, 2016/17 to 2022/23',
x = '',
y = 'Points per player per gameweek',
color = '',
caption = 'Source: https://github.com/vaastav/Fantasy-Premier-League; Jerome Williams
Plot shows means and 95% confidence intervals.
Calculations exclude 2020/21 season and player-gameweeks with selected-by rates lower than 0.5%.')
library(tidyverse)
library(ggplot2)
library(plotrix)
source_string <- 'Source: https://github.com/vaastav/Fantasy-Premier-League; Jerome Williams'
theme_jw <- function() {
theme_bw() +
theme(
plot.title = element_text(face = 'bold', hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)
)
}
df_for_position_analysis <- home_away_data %>%
filter(season != '2020/21')
var = 'total_points'
calculate_stats <- function(df) {
mean_ <- mean(df[var] %>% pull())
se_ <- std.error(df[var])
tibble(
position = df$position[1],
home_away = df$home_away[1],
mean = mean_,
se = se_)
}
# gw %>%
#   split(list(.$season, .$was_home)) %>%
#   map(calculate_stats) %>%
#   list_rbind()
pos_stats <- df_for_position_analysis %>%
split(list(.$position, .$home_away)) %>%
map(calculate_stats) %>%
list_rbind() %>%
mutate(
position = as_factor(position) %>% fct_relevel(c('GK', 'DEF', 'MID', 'FWD'))
)
ggplot(pos_stats, aes(x = position, color = home_away, group = home_away)) +
geom_point(aes(y = mean)) +
geom_linerange(aes(ymin = mean - 2 * se, ymax = mean + 2 * se)) +
theme_jw() +
labs(title = 'Home advantage in FPL points, by player position',
subtitle = 'Fantasy Premier League, 2016/17 to 2022/23',
x = '',
y = 'Points per player per gameweek',
color = '',
caption = 'Source: https://github.com/vaastav/Fantasy-Premier-League; Jerome Williams
Plot shows means and 95% confidence intervals.
Calculations exclude 2020/21 season and player-gameweeks with selected-by rates lower than 0.5%.')
